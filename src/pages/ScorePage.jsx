import { useState } from 'react';
import { Input, Textarea } from "../components";
import { sendMessage } from "../utils";
import Swal from "sweetalert2";
import { Groups } from "../data/";

const categories = ["–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å", "–î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞", "–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å"];

export default function ScorePage() {
    const saved = localStorage.getItem("authGroup");
    const groupData = saved ? JSON.parse(saved) : null;

    const [writer, setWriter] = useState('');
    const [targetGroup, setTargetGroup] = useState('');
    const [description, setDescription] = useState('');
    const [category, setCategory] = useState('–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å'); // ‚Üê –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

    const handleSubmit = () => {
        if (!writer || !targetGroup || !description || !category) {
            Swal.fire("–û—à–∏–±–∫–∞", "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è", "error");
            return;
        }

        const message = `
<b>üí¨ –û–¶–ï–ù–ö–ê</b>

<b>–û—Ç –∫–æ–≥–æ:</b> ${groupData.name}
<b>–ö—Ç–æ –ø–∏—à–µ—Ç:</b> ${writer}
<b>–ü—Ä–æ –∫–æ–≥–æ:</b> ${targetGroup}
<b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> ${category}

<b>–ß—Ç–æ —Å–¥–µ–ª–∞–ª?</b> 
${description}

#–æ—Ü–µ–Ω–∫–∞_–¥–µ–Ω—å_${new Date().getDate()}
#–æ—Ü–µ–Ω–∫–∞_${category.replace(/\s+/g, '').toLowerCase()}_${new Date().getDate()}
#–æ—Ü–µ–Ω–∫–∞_${targetGroup.replace(/\s+/g, '').toLowerCase()}_${new Date().getDate()}
#–æ—Ü–µ–Ω–∫–∞_${category.replace(/\s+/g, '').toLowerCase()}_${targetGroup.replace(/\s+/g, '').toLowerCase()}_${new Date().getDate()}
        `;

        Swal.fire({
            title: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ?",
            icon: "question",
            showCancelButton: true,
            confirmButtonText: "–î–∞",
            cancelButtonText: "–ù–µ—Ç",
            confirmButtonColor: "#000",
        }).then((res) => {
            if (res.isConfirmed) {
                sendMessage(message).then(() => {
                    Swal.fire("–£—Å–ø–µ—à–Ω–æ!", "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", "success");
                    setWriter('');
                    setTargetGroup('');
                    setDescription('');
                    setCategory('–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å');
                });
            }
        });
    };

    const otherGroups = Groups.filter(group => group.name !== groupData?.name);

    return (
        <div className="container max-w-xl mx-auto py-6">
            <h1 className="text-2xl font-bold mb-4">–û—á–∫–∏ –≥—Ä—É–ø–ø—ã</h1>

            {/* –§–µ–π–∫–æ–≤—ã–π input ‚Äî –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–≤–æ–µ–π –≥—Ä—É–ø–ø—ã */}
            <div className="mb-6">
                <h5 className="font-medium mb-2">–ì—Ä—É–ø–ø–∞, –æ—Ç –∫–æ—Ç–æ—Ä–æ–π –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è:</h5>
                <input
                    type="text"
                    value={groupData?.name || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ"}
                    disabled
                    className="w-full px-3 py-2 border border-gray-300 bg-gray-100 text-gray-700 rounded-xl cursor-not-allowed"
                />
            </div>

            <div className="mb-6">
                <h5 className="font-medium mb-2">–ö—Ç–æ –ø–∏—à–µ—Ç?</h5>
                <Input
                    label="–í–∞—à–µ –∏–º—è"
                    value={writer}
                    onChange={(e) => setWriter(e.target.value)}
                    id="writer"
                    name="writer"
                />
            </div>

            <div className="mb-6">
                <h5 className="font-medium mb-2">–û –∫–∞–∫–æ–π –≥—Ä—É–ø–ø–µ?</h5>
                <select
                    value={targetGroup}
                    onChange={(e) => setTargetGroup(e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-xl"
                >
                    <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É</option>
                    {otherGroups.map((group, index) => (
                        <option key={index} value={group.name}>
                            {group.name}
                        </option>
                    ))}
                </select>
            </div>

            <div className="mb-6">
                <h5 className="font-medium mb-2">–ö–∞—Ç–µ–≥–æ—Ä–∏—è –æ—Ü–µ–Ω–∫–∏</h5>
                <select
                    value={category}
                    onChange={(e) => setCategory(e.target.value)}
                    className="w-full px-3 py-2 border border-gray-300 rounded-xl"
                >
                    {categories.map((cat, index) => (
                        <option key={index} value={cat}>
                            {cat}
                        </option>
                    ))}
                </select>
            </div>

            <div className="mb-6">
                <h5 className="font-medium mb-2">–ß—Ç–æ —Å–¥–µ–ª–∞–ª —É—á–∞—Å—Ç–Ω–∏–∫?</h5>
                <Textarea
                    label="–û–ø–∏—à–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ"
                    value={description}
                    onChange={(e) => setDescription(e.target.value)}
                    id="description"
                    name="description"
                />
            </div>

            <button
                onClick={handleSubmit}
                className="bg-black text-white px-6 py-2 rounded-xl hover:bg-gray-800 transition"
            >
                –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </button>
        </div>
    );
}
